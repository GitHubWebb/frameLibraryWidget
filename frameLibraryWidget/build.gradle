apply plugin: 'com.android.library'
apply plugin: 'cn.leo.plugin.magic' //java singleClick用这个

/*
apply plugin: 'maven'

apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.GitHubWebb'

ext {
    //记住一下规则,等会导入时注意, 举例compile 'com.dz.bleota:bleota:1.0.0'
    GITHUB_REPO_PATH = "../GithubUserContent"
    PUBLISH_GROUP_ID = 'com.wwxframe'
    PUBLISH_ARTIFACT_ID = 'widget_aar'
    PUBLISH_VERSION = '0.1.2-SNAPSHOT'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: 'https://packages.aliyun.com/maven/repository/2090728-release-CFbIsz/') {
                authentication(
                        userName: '606403ac32feb31748ed9f68',
                        password: ']-LFPl1PRjPT'
                )
            }
            snapshotRepository(url: 'https://packages.aliyun.com/maven/repository/2090728-snapshot-PwCUCP/') {
                authentication(
                        userName: '606403ac32feb31748ed9f68',
                        password: ']-LFPl1PRjPT'
                )
            }
            pom.version = project.PUBLISH_VERSION
            pom.artifactId = project.PUBLISH_ARTIFACT_ID
            pom.groupId = project.PUBLISH_GROUP_ID
        }

        *//*mavenDeployer {
            //本地maven仓库地址,也可以使用远程maven仓库
            def deployPath = file(project.GITHUB_REPO_PATH)
            repository(url: "file://${deployPath.absolutePath}")
            pom.project {
                groupId project.PUBLISH_GROUP_ID
                artifactId project.PUBLISH_ARTIFACT_ID
                version project.PUBLISH_VERSION
            }
        }*//*
    }
}
*/


/*// 源代码一起打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}*/


//生成文档注释
task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
    destinationDir = file("../GithubUserContent/com/wwxframe/widget_aar/javadoc/")

}
//将文档打包成jar
task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
//将源码打包
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}
//包含文档和源码的aar
artifacts {
//    archives androidSourcesJar
    archives androidJavadocsJar
}

def SupportVersion = '28.0.0'

android {
    compileSdkVersion 30
    buildToolsVersion = '26.0.2'

    //忽略图片警告
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false

    lintOptions {
        abortOnError false
    }

    dexOptions {
        dexInProcess true

        jumboMode = true
        preDexLibraries = true //线程数
        threadCount = 8
    }

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30

//        multiDexEnabled true

        javaCompileOptions {

        }

        //新版本Gradle使用注解需加入
//        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true

    }

    buildTypes {
        /* 线下审查环境 */
        check {
            debuggable true
            minifyEnabled true //是否混淆
            //是否设置zip对齐优化
            zipAlignEnabled true
            consumerProguardFiles 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileOptions {//使用JAVA8语法解析
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    //noinspection GradleCompatible,GradleCompatible
    api files('libs/pldroid-shortvideo-1.10.0.jar')
    implementation 'com.qiniu:qiniu-android-sdk:7.3.11'

    implementation 'androidx.multidex:multidex:2.0.0'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    //    api 'com.android.support:support-media-compat:26.+'
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    api 'com.squareup.okhttp3:okhttp:3.9.1'

    /*Network*/
    api 'com.google.code.gson:gson:2.8.6'

    api('com.squareup.retrofit2:retrofit:2.3.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    // 标准转换器,去掉 Retrofit上传参数时，String参数会多一对双引号
    api 'com.squareup.retrofit2:converter-scalars:2.3.0'

    api('com.squareup.retrofit2:converter-gson:2.3.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
        exclude group: 'com.google.code.gson', module: 'gson'

    }
    api('com.squareup.retrofit2:adapter-rxjava:2.3.0') {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    api 'com.github.bumptech.glide:glide:3.7.0'

    //SingleClick单击防重
    api 'com.github.jarryleo:SingleClick:v1.8.3'

    //ParallaxBackLayout,目的仿苹果右划关闭页面
    api 'com.github.anzewei:parallaxbacklayout:1.1.9'

    //https://github.com/chrisbanes/PhotoView/
    /*//维持该版本 避免使用AndroidX
    api 'com.github.chrisbanes:PhotoView:1.3.1'*/

    api 'com.github.chrisbanes:PhotoView:2.3.0'

    api 'com.facebook.fresco:fresco:1.13.0'

    implementation 'com.hjq:toast:8.0'

    /**
     * 高效的弹窗
     * @link "https://github.com/li-xiaojun/XPopup"
     */
    api 'com.github.li-xiaojun:XPopup:2.3.2'

    // Android-PickerView是一款仿iOS的PickerView控件，带有3D圆弧效果，并封装了时间选择和选项选择这两种选择器，
    // @Link "https://github.com/Bigkoo/Android-PickerView/wiki/%E4%B8%AD%E6%96%87%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3%EF%BC%884.x%E7%89%88%EF%BC%89"
    api 'com.contrarywind:Android-PickerView:4.1.9'

    // http://p.codekk.com/detail/Android/simplepeng/SpiderMan debug 模式崩溃日志抓取
    api 'com.simple:spiderman:1.1.7'
    debugImplementation('com.simple:spiderman:1.1.7') {
        exclude group: "com.android.support"
    }

    implementation 'com.orhanobut:logger:2.2.0'

    // JantHsueh 维护自 YoKeyword 项目地址
    // @link https://github.com/JantHsueh/Fragmentation/blob/androidx/README_CN.md
    // @link https://github.com/YoKeyword/Fragmentation/blob/master/README_CN.md
    // 以下为androidx的使用方式，如果使用的是android.support包，fragmentationx -> fragmentation 即可
    api 'me.xuexuan:fragmentationx:1.0.6'
    // swipeback基于fragmentation, 如果是自定制SupportActivity/Fragment，则参照SwipeBackActivity/Fragment实现即可
    api 'me.xuexuan:fragmentationx-swipeback:1.0.6'
    // Activity作用域的EventBus，通信更安全
    api 'me.yokeyword:eventbus-activity-scope:1.1.0'
    api 'org.greenrobot:eventbus:3.1.1'

    /**
     * @see link "https://hub.fastgit.org/gzu-liyujiang/Android_CN_OAID"
     * 安卓设备唯一标识解决方案，可作为移动安全联盟统一 SDK （miit_mdid_xxx.aar）的替代方案。
     * 本项目提供了国内各大手机厂商获取 OAID（开放匿名设备标识）及海外手机平台获取 AAID （安卓广告标识）的便携接口，
     * 另外也提供了 IMEI/MEID、AndroidID、WidevineID、PseudoID、GUID 等常见的设备标识的获取方法。
     */
    implementation 'com.github.gzu-liyujiang:Android_CN_OAID:4.1.1'


}
